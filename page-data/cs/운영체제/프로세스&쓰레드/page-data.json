{"componentChunkName":"component---src-templates-blog-post-js","path":"/cs/운영체제/프로세스&쓰레드/","result":{"data":{"site":{"siteMetadata":{"title":"jinwook567"}},"markdownRemark":{"id":"96f083a2-5aa5-5b8a-9364-c6733018eeb4","excerpt":"프로세스 프로세스는 실행중인 프로그램으로, 실행 파일이 memory에 적재되어 CPU를 할당받아 실행되는 것을 process라고 한다. 운영체제로부터 주소 공간, 파일, 메모리 등을 할당받고 이것들을 총칭하여 프로세스라고 한다. 프로세스 메모리 구조 code…","html":"<h1>프로세스</h1>\n<p><strong>프로세스는 실행중인 프로그램으로,</strong> 실행 파일이 memory에 적재되어 CPU를 할당받아 실행되는 것을 process라고 한다. 운영체제로부터 주소 공간, 파일, 메모리 등을 할당받고 이것들을 총칭하여 프로세스라고 한다.</p>\n<h2>프로세스 메모리 구조</h2>\n<ol>\n<li>code 영역 - 실행한 프로그램의 코드가 저장되는 메모리 영역</li>\n<li>data 영역 - 프로그램의 전역 변수가 저장되는 영역</li>\n<li>heap 영역 - 동적으로 할당되는 메모리 영역 (좀 더 탐구 필요.)</li>\n<li>stack 영역 - 함수 호출 시 생성되는 지역변수, 매개변수가 저장되는 영역</li>\n</ol>\n<h2>프로세스 제어 블록(Process Control Block, PCB)</h2>\n<p>PCB는 특정 프로세스의 중요한 정보를 저장하고 있는 운영체제의 자료구조이다. 운영체제는 프로세스 관리를 위해 프로세스 생성과 동시에 고유한 PCB를 생성한다. 프로세스 전환이 발생하면 진행하던 작업을 종료하고 CPU를 반환해야 하는데 이 때 작업의 진행상황을 전부 PCB에 저장해놓는다. 이를 Context Switch라고 한다. 다시 CPU를 할당받으면 PCB 내역을 바탕으로 다시 작업을 수행한다.</p>\n<h3>PCB 구성</h3>\n<ul>\n<li>프로세스 식별자: process id</li>\n<li>프로세스 상태: new, ready, running 등</li>\n<li>프로그램 카운터: 프로세스가 다음에 실행할 주소</li>\n<li>CPU 스케쥴링 정보: 프로세스의 우선순위</li>\n<li>메모리 관리 정보: 페이지 테이블 또는 세그먼트 테이블과 같은 정보를 포함</li>\n</ul>\n<h2>멀티 프로세스</h2>\n<p>멀티 프로세스란 2개 이상의 프로세스가 동시에 실행되는 것을 의미한다. 동시에 실행하는 방법은 2가지이다. 1개의 CPU Core를 사용하여 여러개의 프로세스를 빠르게 전환하며 처리하는 방식, 여러개의 CPU Core를 사용하여 각각의 process를 처리하는 방식이다.</p>\n<h2>CPU의 처리 방식</h2>\n<p>CPU는 PC Register라는 다음에 실행될 명령어가 저장된 주솟값을 참조하여 연산을 수행한다. 프로세스가 전환될 때, 다른 프로세스의 PC Register가 등록된다.</p>\n<h1>쓰레드</h1>\n<p>쓰레드는 프로세스의 실행의 단위라고 할 수 있다.</p>","frontmatter":{"title":"프로세스와 쓰레드","date":"October 18, 2022","description":"프로세스와 쓰레드의 개념과 차이점"}},"previous":{"fields":{"slug":"/tech/React/GlobalState/"},"frontmatter":{"title":"React의 전역 상태 관리"}},"next":{"fields":{"slug":"/programming/이펙티브타입스크립트/2장/"},"frontmatter":{"title":"이펙티브 타입스크립트 2장"}}},"pageContext":{"id":"96f083a2-5aa5-5b8a-9364-c6733018eeb4","previousPostId":"d1ab9ee2-c0be-5477-b15c-54461acf94e5","nextPostId":"4f71d23a-e4d0-5efb-a1b0-e52d6c4f76bd"}},"staticQueryHashes":["2841359383","3257411868"]}