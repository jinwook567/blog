{"componentChunkName":"component---src-templates-blog-post-js","path":"/programming/git/","result":{"data":{"site":{"siteMetadata":{"title":"jinwook567"}},"markdownRemark":{"id":"6a5ee1a7-b8a6-5d22-8968-6a91a6171688","excerpt":"merge 병합은 두 브랜치의 합집합을 구하는 것이다. 병합에는 3가지 종류가 있다. merge commit 서로 다른 변경된 부분이 있을 경우, 새롭게 저장한다. fast-forward…","html":"<h1>merge</h1>\n<p>병합은 두 브랜치의 합집합을 구하는 것이다. 병합에는 3가지 종류가 있다.</p>\n<ol>\n<li>merge commit\n<ul>\n<li>서로 다른 변경된 부분이 있을 경우, 새롭게 저장한다.</li>\n</ul>\n</li>\n<li>fast-forward\n<ul>\n<li>합친 결과물이 한 커밋의 결과물과 동일할 때 새로운 상태를 만들어 줄 필요없이 상태를 바꿔주면 된다.</li>\n</ul>\n</li>\n<li>conflict\n<ul>\n<li>동일한 부분이 다를 경우 충돌이 일어나게 된다.</li>\n</ul>\n</li>\n</ol>\n<h1>pull request</h1>\n<p>정중하게 브랜치 병합을 요청하는 것이다.</p>\n<ul>\n<li>풀 리퀘 제목: 동료 개발자가 한 눈에 이해하기 쉬운 제목을 적어둔다.</li>\n<li>풀 리퀘 내용: 코드를 이해하는데 도움이 되는 설명을 적어준다. 스크린샷 혹은 테스트 방법</li>\n<li>reviewers: 콕 찝어서 풀 리퀘 검토 요청, 같은 팀원 혹은 해당 기능과 연관된 동료 선택</li>\n</ul>\n<h1>fork</h1>\n<p>타인의 원본저장소를 내 계정의 원격저장소로 복사해오는 명령어이다.\n브랜치를 포함한 원본저장소의 모든 커밋 이력을 통째로 복사한다.</p>\n<h3>오픈 소스 기여 방식</h3>\n<p>원본 저장소에는 지정된 collaborators만 코드를 푸쉬할 수 있다. 오픈소스 프로젝트에서 만일 collaborators가 너무 많아진다면 저장소를 관리하는데 어려워질 것이다. 하지만 동시에 많은 개발자들에게 의견을 받고 오픈소스를 개선하고 싶은 니즈가 있다. 이럴 때 개발자는 fork를 해서 원본 저장소를 복사하고, 이곳에 커밋을 올린 다음에 원본 저장소의 소유자에게 풀 리퀘를 요청하면 원본 저장소의 소유자는 개발자의 병합 요청을 검토해서 원본 저장소에 반영한다.</p>\n<h3>원본 저장소에 풀 리퀘 보내기</h3>\n<p>new pull request 버튼을 누르고 head repository, base repository가 뜬다면 성공이다.\n풀 리퀘에 대한 설명을 적고 요청을 보낸다. 만일 원본저장소에 컨트리뷰션 가이드가 있다면 읽고 준수하도록 한다. 보통 README.md에 존재한다.</p>\n<p>풀 리퀘를 승인하는 방법은, 좌측 카테고리에 fork 탭을 클릭하고 pull requests 탭을 클릭하면 요청된 풀 리퀘들을 확인할 수 있다. 댓글만 달고 싶다면 comment를, 댓글을 달고 코드가 좋아보여 바로 병합해도 되면 approve를, 수정을 요청하고 싶으면 request changes를 선택한다.</p>\n<h1>add remote</h1>\n<p>내 원격 저장소에서 원본 저장소의 히스토리도 같이 보고싶다면, add remote를 해주면 된다. 원격 이름에는 upstream을 넣어주고 원본 저장소 주소를 복사해서 넣어주면 된다. upstream은 원본 저장소를 지칭하는 관용적 닉네임이다.</p>\n<p><code class=\"language-text\">fetch</code>를 하게 되면 원본 저장소에 있는 커밋 히스토리를 받아올 수 있다. pull과는 다른 점은 커밋 이력만 받아오기 때문에 내 코드에는 아무 영향이 없다.</p>\n<h1>rebase</h1>","frontmatter":{"title":"git 사용법","date":"October 06, 2022","description":"merge, pull request, fork, rebase.."}},"previous":{"fields":{"slug":"/알고리즘/숫자게임/"},"frontmatter":{"title":"숫자 게임"}},"next":{"fields":{"slug":"/알고리즘/여행경로/"},"frontmatter":{"title":"여행 경로"}}},"pageContext":{"id":"6a5ee1a7-b8a6-5d22-8968-6a91a6171688","previousPostId":"7f14a095-e1f6-5567-bd76-936d59b7781f","nextPostId":"777d548c-27fe-5a4a-af3b-62269fca7d6b"}},"staticQueryHashes":["2841359383","3257411868"]}